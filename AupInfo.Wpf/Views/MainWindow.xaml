<metro:MetroWindow x:Class="AupInfo.Wpf.Views.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:prism="http://prismlibrary.com/"
                   xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
                   xmlns:vm="clr-namespace:AupInfo.Wpf.ViewModels"
                   xmlns:local="clr-namespace:AupInfo.Wpf"
                   prism:ViewModelLocator.AutoWireViewModel="True"
                   mc:Ignorable="d"
                   d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel}"
                   Background="{DynamicResource MaterialDesignPaper}"
                   TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                   TextElement.FontWeight="Medium"
                   TextElement.FontSize="14"
                   FontFamily="{md:MaterialDesignFont}"
                   BorderThickness="1"
                   TitleCharacterCasing="Normal"
                   TitleAlignment="Center"
                   Title="{Binding Title.Value}" Height="450" Width="800"
                   AllowDrop="True">
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Closed">
      <local:DataContextDisposeAction/>
    </i:EventTrigger>
    <i:EventTrigger EventName="Loaded">
      <rp:EventToReactiveCommand Command="{Binding Loaded}"/>
    </i:EventTrigger>
    <i:EventTrigger EventName="PreviewDragOver">
      <rp:EventToReactiveCommand Command="{Binding DragOver}"/>
    </i:EventTrigger>
    <i:EventTrigger EventName="Drop">
      <rp:EventToReactiveCommand Command="{Binding Drop}"/>
    </i:EventTrigger>
  </i:Interaction.Triggers>

  <metro:MetroWindow.Resources>
    <CollectionViewSource x:Key="PanelItemsSrc" Source="{Binding PanelItems}">
      <CollectionViewSource.GroupDescriptions>
        <PropertyGroupDescription PropertyName="Category"/>
      </CollectionViewSource.GroupDescriptions>
    </CollectionViewSource>
  </metro:MetroWindow.Resources>

  <metro:MetroWindow.LeftWindowCommands>
    <metro:WindowCommands>
      <TextBlock Text="{Binding Filename.Value}"
                 ToolTip="{Binding FilePath.Value}"
                 VerticalAlignment="Center"
                 Margin="8 0 8 0"/>
    </metro:WindowCommands>
  </metro:MetroWindow.LeftWindowCommands>

  <md:DialogHost SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
    <md:DrawerHost IsLeftDrawerOpen="{Binding IsMenuOpen.Value}"
                   OpenMode="{Binding DrawerOpenMode.Value}">
      <md:DrawerHost.LeftDrawerContent>
        <DockPanel MinWidth="180">
          <StackPanel Orientation="Horizontal"
                      DockPanel.Dock="Top"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top">
            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                          ToolTip="メニューを開いたままにする"
                          IsChecked="{Binding IsModeless.Value}">
              <md:PackIcon Kind="Pin"
                           RenderTransformOrigin=".5,.5">
                <md:PackIcon.RenderTransform>
                  <RotateTransform Angle="45" />
                </md:PackIcon.RenderTransform>
              </md:PackIcon>
              <md:ToggleButtonAssist.OnContent>
                <md:PackIcon Kind="Pin" />
              </md:ToggleButtonAssist.OnContent>
            </ToggleButton>
            <ToggleButton Margin="16"
                          Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                          IsChecked="{Binding IsMenuOpen.Value}"/>
          </StackPanel>

          <ListBox Margin="0 0 0 16"
                   ItemsSource="{Binding Source={StaticResource PanelItemsSrc}}"
                   SelectedIndex="{Binding SelectedIndex.Value}"
                   SelectedItem="{Binding SelectedItem.Value}"
                   Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
            <ListBox.GroupStyle>
              <GroupStyle>
                <GroupStyle.HeaderTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Name}"
                               Margin="16 4 0 0"
                               Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                  </DataTemplate>
                </GroupStyle.HeaderTemplate>
              </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
              <DataTemplate DataType="{x:Type vm:PanelItemViewModel}">
                <TextBlock Text="{Binding Name}" Margin="16 0 0 0">
                  <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                      <rp:EventToReactiveCommand Command="{Binding PreviewMouseLeftButtonUp}"/>
                    </i:EventTrigger>
                  </i:Interaction.Triggers>
                </TextBlock>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </DockPanel>
      </md:DrawerHost.LeftDrawerContent>

      <DockPanel>
        <md:ColorZone Padding="16"
                      DockPanel.Dock="Top"
                      md:ShadowAssist.ShadowDepth="Depth2"
                      Mode="PrimaryLight">
          <DockPanel>
            <StackPanel Orientation="Horizontal">
              <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                            IsChecked="{Binding IsMenuOpen.Value}"/>
            </StackPanel>
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{Binding Subtitle.Value}"/>
          </DockPanel>
        </md:ColorZone>

        <Grid>
          <ScrollViewer md:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding HorizontalScrollBarVisibility.Value}"
                        VerticalScrollBarVisibility="{Binding VerticalScrollBarVisibility.Value}">
            <ContentControl prism:RegionManager.RegionName="ContentRegion"
                            Margin="{Binding ContentMargin.Value}"/>
          </ScrollViewer>

          <md:Snackbar x:Name="MainSnackbar"
                       MessageQueue="{Binding SnackbarMessageQueue}"/>
        </Grid>
      </DockPanel>
    </md:DrawerHost>
  </md:DialogHost>
</metro:MetroWindow>
